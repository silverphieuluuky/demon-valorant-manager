<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Compact Button Style -->
    <Style x:Key="CompactButtonStyle" TargetType="Button" BasedOn="{StaticResource SecondaryButton}">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Margin" Value="0,0,12,0"/>
    </Style>

    <!-- Standard Button Style -->
    <Style x:Key="StandardButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="0,0,8,0"/>
    </Style>

    <!-- Small Button Style -->
    <Style x:Key="SmallButtonStyle" TargetType="Button" BasedOn="{StaticResource SecondaryButton}">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="FontSize" Value="9"/>
        <Setter Property="Margin" Value="0,0,4,0"/>
    </Style>

    <!-- Icon Button Style -->
    <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource SecondaryButton}">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Margin" Value="0,0,8,0"/>
    </Style>

    <!-- Toggle Button Style -->
    <Style x:Key="CompactToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource ModernToggleButton}">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="0,0,12,0"/>
    </Style>

    <!-- Input Control Style -->
    <Style x:Key="CompactInputStyle" TargetType="TextBox" BasedOn="{StaticResource ModernTextBox}">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="0,0,12,0"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <!-- Password Box Style -->
    <Style x:Key="CompactPasswordBoxStyle" TargetType="PasswordBox" BasedOn="{StaticResource ModernPasswordBox}">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="0,0,12,0"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <!-- Rank Image Style -->
    <Style x:Key="LoginRankImageStyle" TargetType="Border">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Background" Value="{StaticResource BackgroundGradient}"/>
        <Setter Property="Margin" Value="0,0,0,6"/>
    </Style>

    <Style x:Key="ManageRankImageStyle" TargetType="Border">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="CornerRadius" Value="9"/>
        <Setter Property="Background" Value="{StaticResource BackgroundGradient}"/>
        <Setter Property="Margin" Value="0,0,3,0"/>
    </Style>

    <!-- Avatar Style -->
    <Style x:Key="LoginAvatarStyle" TargetType="Border">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="CornerRadius" Value="30"/>
        <Setter Property="Background" Value="{StaticResource BackgroundGradient}"/>
        <Setter Property="Margin" Value="0,0,0,12"/>
    </Style>

    <Style x:Key="ManageAvatarStyle" TargetType="Border">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="CornerRadius" Value="17"/>
        <Setter Property="Background" Value="{StaticResource BackgroundGradient}"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
    </Style>

    <!-- Compact Text Style -->
    <Style x:Key="CompactTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,12,0"/>
    </Style>

    <!-- Small Text Style -->

    <!-- Modern CheckBox Style -->
    <Style x:Key="ModernCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">
                            <Path x:Name="CheckMark"
                                  Data="M1,5 L4,8 L8,2"
                                  Stroke="{DynamicResource PrimaryColor}"
                                  StrokeThickness="2"
                                  Fill="Transparent"
                                  Visibility="Collapsed"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PrimaryColorBright}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SmallTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="Margin" Value="0,6,0,0"/>
    </Style>

    <!-- Toggle Switch Style -->
    <Style x:Key="ToggleSwitchStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="14"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">
                            <Ellipse x:Name="ToggleCircle"
                                     Width="20"
                                     Height="20"
                                     Fill="{DynamicResource PrimaryColor}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Margin="2,0,0,0"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
                            <Setter TargetName="ToggleCircle" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="ToggleCircle" Property="Margin" Value="0,0,2,0"/>
                            <Setter TargetName="ToggleCircle" Property="Fill" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PrimaryColorBright}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Compact Grid Style -->
    <Style x:Key="CompactGridStyle" TargetType="Grid">
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>

         <!-- Compact StackPanel Style -->
     <Style x:Key="CompactStackPanelStyle" TargetType="StackPanel">
         <Setter Property="Margin" Value="0,0,0,8"/>
     </Style>
     
     <!-- Settings Button Style - Consistent sizing -->
     <Style x:Key="SettingsButtonStyle" TargetType="Button">
         <Setter Property="Background" Value="#2A2A2A"/>
         <Setter Property="Foreground" Value="#FFFFFF"/>
         <Setter Property="BorderBrush" Value="#444444"/>
         <Setter Property="BorderThickness" Value="1"/>
         <Setter Property="FontFamily" Value="Segoe UI"/>
         <Setter Property="FontSize" Value="12"/>
         <Setter Property="FontWeight" Value="SemiBold"/>
         <Setter Property="Padding" Value="16,8"/>
         <Setter Property="Margin" Value="0,0,12,0"/>
         <Setter Property="MinWidth" Value="100"/>
         <Setter Property="Height" Value="36"/>
         <Setter Property="Cursor" Value="Hand"/>
         <Setter Property="Template">
             <Setter.Value>
                 <ControlTemplate TargetType="Button">
                     <Border x:Name="Bd" 
                             Background="{TemplateBinding Background}"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             CornerRadius="8">
                         <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                     </Border>
                     <ControlTemplate.Triggers>
                         <Trigger Property="IsMouseOver" Value="True">
                             <Setter TargetName="Bd" Property="Background" Value="#3A3A3A"/>
                         </Trigger>
                         <Trigger Property="IsPressed" Value="True">
                             <Setter TargetName="Bd" Property="Background" Value="#4A4A4A"/>
                         </Trigger>
                     </ControlTemplate.Triggers>
                 </ControlTemplate>
             </Setter.Value>
         </Setter>
     </Style>
     
     <!-- Settings Button Style - No right margin for last button -->
     <Style x:Key="SettingsButtonStyleLast" TargetType="Button">
         <Setter Property="Background" Value="#2A2A2A"/>
         <Setter Property="Foreground" Value="#FFFFFF"/>
         <Setter Property="BorderBrush" Value="#444444"/>
         <Setter Property="BorderThickness" Value="1"/>
         <Setter Property="FontFamily" Value="Segoe UI"/>
         <Setter Property="FontSize" Value="12"/>
         <Setter Property="FontWeight" Value="SemiBold"/>
         <Setter Property="Padding" Value="16,8"/>
         <Setter Property="Margin" Value="0,0,0,0"/>
         <Setter Property="MinWidth" Value="100"/>
         <Setter Property="Height" Value="36"/>
         <Setter Property="Cursor" Value="Hand"/>
         <Setter Property="Template">
             <Setter.Value>
                 <ControlTemplate TargetType="Button">
                     <Border x:Name="Bd" 
                             Background="{TemplateBinding Background}"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             CornerRadius="8">
                         <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                     </Border>
                     <ControlTemplate.Triggers>
                         <Trigger Property="IsMouseOver" Value="True">
                             <Setter TargetName="Bd" Property="Background" Value="#3A3A3A"/>
                         </Trigger>
                         <Trigger Property="IsPressed" Value="True">
                             <Setter TargetName="Bd" Property="Background" Value="#4A4A4A"/>
                         </Trigger>
                     </ControlTemplate.Triggers>
                 </ControlTemplate>
             </Setter.Value>
         </Setter>
     </Style>
     
     <!-- Settings Primary Button Style -->
     <Style x:Key="SettingsPrimaryButtonStyle" TargetType="Button">
         <Setter Property="Background" Value="#1E88E5"/>
         <Setter Property="Foreground" Value="White"/>
         <Setter Property="FontFamily" Value="Segoe UI"/>
         <Setter Property="FontSize" Value="12"/>
         <Setter Property="FontWeight" Value="SemiBold"/>
         <Setter Property="Padding" Value="16,8"/>
         <Setter Property="MinWidth" Value="80"/>
         <Setter Property="Height" Value="36"/>
         <Setter Property="BorderThickness" Value="0"/>
         <Setter Property="Cursor" Value="Hand"/>
         <Setter Property="Template">
             <Setter.Value>
                 <ControlTemplate TargetType="Button">
                     <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="8">
                         <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                     </Border>
                     <ControlTemplate.Triggers>
                         <Trigger Property="IsMouseOver" Value="True">
                             <Setter TargetName="Bd" Property="Background" Value="#1976D2"/>
                         </Trigger>
                         <Trigger Property="IsPressed" Value="True">
                             <Setter TargetName="Bd" Property="Background" Value="#1565C0"/>
                         </Trigger>
                     </ControlTemplate.Triggers>
                 </ControlTemplate>
             </Setter.Value>
         </Setter>
     </Style>
 
 </ResourceDictionary> 