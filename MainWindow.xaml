<Window x:Class="RiotAutoLogin.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RiotAutoLogin"
        xmlns:conv="clr-namespace:RiotAutoLogin.Converters"
        mc:Ignorable="d"
        Title="Demon Valorant Manager v1.1.0"
        Height="900"
        Width="1400"
        WindowStartupLocation="CenterScreen"
        Background="Transparent"
        AllowsTransparency="True"
        WindowStyle="None"
        ResizeMode="CanResize"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True"
        Loaded="Window_Loaded"
        Closing="MainWindow_Closing"
        KeyDown="MainWindow_KeyDown">
    
    <Window.Resources>
        <!-- Load Modern UI Controls -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Controls/ModernButton.xaml"/>
                <ResourceDictionary Source="Controls/ModernInput.xaml"/>
                <ResourceDictionary Source="Controls/NeonInput.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        <!-- Neon Valorant Color Palette -->
        <SolidColorBrush x:Key="PrimaryColor" Color="#00BFFF"/>
        <SolidColorBrush x:Key="PrimaryColorBright" Color="#00D4FF"/>
        <SolidColorBrush x:Key="PrimaryColorGlow" Color="#00BFFF"/>
        <SolidColorBrush x:Key="SecondaryColor" Color="#0A0A0A"/>
        <SolidColorBrush x:Key="AccentColor" Color="#00BFFF"/>
        <SolidColorBrush x:Key="BackgroundColor" Color="#0A0A0A"/>
        <SolidColorBrush x:Key="SurfaceColor" Color="#1A1A1A"/>
        <SolidColorBrush x:Key="SurfaceColorLight" Color="#2A2A2A"/>
        <SolidColorBrush x:Key="TextPrimaryColor" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TextSecondaryColor" Color="#B0B0B0"/>
        <SolidColorBrush x:Key="BorderColor" Color="#333333"/>
        <SolidColorBrush x:Key="BorderColorLight" Color="#444444"/>
        <SolidColorBrush x:Key="SuccessColor" Color="#00BFFF"/>
        <SolidColorBrush x:Key="WarningColor" Color="#FFD700"/>
        <SolidColorBrush x:Key="ErrorColor" Color="#FF4444"/>
        <SolidColorBrush x:Key="InputBackgroundColor" Color="#1A1A1A"/>
        <SolidColorBrush x:Key="InputBorderColor" Color="#444444"/>
        <SolidColorBrush x:Key="InputFocusColor" Color="#00BFFF"/>
        <SolidColorBrush x:Key="InputBackgroundBrush" Color="#1A1A1A"/>
        
        <!-- Neon Valorant Gradients -->
        <LinearGradientBrush x:Key="PrimaryGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#00BFFF" Offset="0"/>
            <GradientStop Color="#0099CC" Offset="1"/>
        </LinearGradientBrush>
        
        <LinearGradientBrush x:Key="NeonGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#00D4FF" Offset="0"/>
            <GradientStop Color="#00BFFF" Offset="0.5"/>
            <GradientStop Color="#0099CC" Offset="1"/>
        </LinearGradientBrush>
        
        <LinearGradientBrush x:Key="NeonGlowGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#00BFFF" Offset="0"/>
            <GradientStop Color="#00D4FF" Offset="0.5"/>
            <GradientStop Color="#00BFFF" Offset="1"/>
        </LinearGradientBrush>
        
        <LinearGradientBrush x:Key="BackgroundGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#0A0A0A" Offset="0"/>
            <GradientStop Color="#1A1A1A" Offset="1"/>
        </LinearGradientBrush>
        
        <!-- Missing Resources -->
        <SolidColorBrush x:Key="CardBackgroundBrush" Color="#1A1A1A"/>
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#0A0A0A"/>
        
        <!-- Card Shadow Effect -->
        <DropShadowEffect x:Key="CardShadow" ShadowDepth="4" BlurRadius="12" Opacity="0.3" Color="#000000"/>
        
        <!-- Sidebar Tab Styles -->
        <Style x:Key="SidebarTabStyle" TargetType="Border">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="14,20"/>
            <Setter Property="Margin" Value="0,0,0,12"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform X="0"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#333333"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#00BFFF" BlurRadius="8" ShadowDepth="0" Opacity="0.3"/>
                        </Setter.Value>
                    </Setter>
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                               From="0" To="5" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                               From="5" To="0" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Active Sidebar Tab Style -->
        <Style x:Key="ActiveSidebarTabStyle" TargetType="Border" BasedOn="{StaticResource SidebarTabStyle}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#00BFFF" Offset="0"/>
                        <GradientStop Color="#1E90FF" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="DodgerBlue" BlurRadius="12" ShadowDepth="4" Opacity="0.6"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Smooth Hover Animation for Sidebar Tabs -->
        <Style x:Key="SmoothSidebarTabStyle" TargetType="Border" BasedOn="{StaticResource SidebarTabStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#333333"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#00BFFF" BlurRadius="8" ShadowDepth="0" Opacity="0.3"/>
                        </Setter.Value>
                    </Setter>
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                               From="0" To="5" Duration="0:0:0.25" 
                                               AccelerationRatio="0.3" DecelerationRatio="0.7"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                               From="5" To="0" Duration="0:0:0.25"
                                               AccelerationRatio="0.3" DecelerationRatio="0.7"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Modern Card Style -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="24"/>
            <Setter Property="Effect" Value="{StaticResource CardShadow}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource BorderColorLight}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Interactive Card Style -->
        <Style x:Key="InteractiveCardStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Effect" Value="{StaticResource CardShadow}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SurfaceColorLight}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource BorderColorLight}"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect ShadowDepth="6" BlurRadius="16" Opacity="0.4" Color="#000000"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Rank Loading Style -->
        <Style x:Key="RankLoadingStyle" TargetType="Border">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="CornerRadius" Value="20"/>
            <Setter Property="Background" Value="{StaticResource SurfaceColorLight}"/>
            <Setter Property="Effect" Value="{StaticResource CardShadow}"/>
        </Style>
        
        <!-- Modern Toggle Button Style -->
        <Style x:Key="ModernToggleButton" TargetType="ToggleButton">
            <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="Bd" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource PrimaryColor}"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource PrimaryColorBright}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource SurfaceColorLight}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern TextBox Style -->
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource InputBackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource InputBorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
            <Setter Property="CaretBrush" Value="{StaticResource TextPrimaryColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource InputFocusColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern PasswordBox Style -->
        <Style x:Key="ModernPasswordBox" TargetType="PasswordBox">
            <Setter Property="Background" Value="{StaticResource InputBackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource InputBorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource InputFocusColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern ComboBox Style -->
        <Style x:Key="ModernComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource InputBackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource InputBorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource InputFocusColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        

        
        <!-- Secondary Button Style -->
        <Style x:Key="SecondaryButton" TargetType="Button">
             <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
             <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                 <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Bd" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                 <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource SurfaceColorLight}"/>
                 </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
         </Style>
         
        <!-- Modern ListView Style -->
        <Style x:Key="ModernListViewStyle" TargetType="ListView">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
         </Style>
         

        
        <!-- Converters -->
        <conv:StringToImageSourceConverter x:Key="StringToImageSourceConverter"/>
        <conv:RankToIconConverter x:Key="RankToIconConverter"/>
        <conv:RankErrorIconConverter x:Key="RankErrorIconConverter"/>
        <conv:RankVisibilityConverter x:Key="RankVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <conv:ZeroToVisibilityConverter x:Key="ZeroToVisibilityConverter"/>
        
                     <!-- Progress to Width Converter -->
           <conv:ProgressToWidthConverter x:Key="ProgressToWidthConverter"/>
           
           <!-- Boolean to Text Converter -->
           <conv:BooleanToTextConverter x:Key="BooleanToTextConverter"/>
           
           <!-- Rank to Icon Converter -->
           
           <!-- Rank Error Icon Converter -->
           
           <!-- Rank Visibility Converter -->
           
           <!-- Zero to Visibility Converter -->
           <!-- <conv:ZeroToVisibilityConverter x:Key="ZeroToVisibilityConverter"/> -->
           
           <!-- Null or Empty to Visibility Converter -->
           <conv:NullOrEmptyToVisibilityConverter x:Key="NullOrEmptyToVisibilityConverter"/>
         
         <!-- Animations -->
         <Storyboard x:Key="FadeInAnimation">
             <DoubleAnimation Storyboard.TargetProperty="Opacity"
                        From="0" To="1" Duration="0:0:0.4"/>
         </Storyboard>
         
         <Storyboard x:Key="ScaleInAnimation">
             <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                        From="0.8" To="1" Duration="0:0:0.3"/>
             <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                        From="0.8" To="1" Duration="0:0:0.3"/>
         </Storyboard>
         
         <Storyboard x:Key="SlideInAnimation">
             <ThicknessAnimation Storyboard.TargetProperty="Margin"
                           From="0,-20,0,0" To="0,0,0,0" Duration="0:0:0.3"/>
         </Storyboard>
         
         <Storyboard x:Key="PulseAnimation">
             <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                        From="1" To="1.05" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever"/>
             <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                        From="1" To="1.05" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever"/>
         </Storyboard>
        
                         <!-- Standardized Button Styles -->
        <Style x:Key="ModernButton" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="{StaticResource PrimaryGradient}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
          </Style>
         
         <!-- TabItem Style -->
         <Style x:Key="TabItemStyle" TargetType="TabItem">
             <Setter Property="Background" Value="Transparent"/>
             <Setter Property="BorderThickness" Value="0"/>
             <Setter Property="Padding" Value="20,16"/>
             <Setter Property="Margin" Value="6,4"/>
             <Setter Property="Template">
                 <Setter.Value>
                     <ControlTemplate TargetType="TabItem">
                         <Border x:Name="Bd" CornerRadius="8" Background="{TemplateBinding Background}" 
                                 BorderBrush="{StaticResource BorderColor}" BorderThickness="1" 
                                 Padding="{TemplateBinding Padding}">
                             <Border.Effect>
                                 <DropShadowEffect Color="#00BFFF" BlurRadius="5" ShadowDepth="0" Opacity="0"/>
                             </Border.Effect>
                             <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" 
                                             HorizontalAlignment="Center" ContentSource="Header"/>
                         </Border>
                         <ControlTemplate.Triggers>
                             <Trigger Property="IsSelected" Value="True">
                                 <Setter Property="Background" Value="{StaticResource NeonGradient}"/>
                                 <Setter Property="BorderBrush" Value="{StaticResource PrimaryColorBright}"/>
                                 <Setter Property="Foreground" Value="White"/>
                             </Trigger>
                             <Trigger Property="IsSelected" Value="True">
                                 <Setter TargetName="Bd" Property="Background" Value="{StaticResource PrimaryGradient}"/>
                                 <Setter Property="Foreground" Value="White"/>
                                 <Setter Property="FontWeight" Value="Bold"/>
                                 <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                                 <Setter TargetName="Bd" Property="Effect">
                                     <Setter.Value>
                                         <DropShadowEffect ShadowDepth="4" BlurRadius="12" Opacity="0.4" Color="#FF4655"/>
                                     </Setter.Value>
                                 </Setter>
                             </Trigger>
                             <Trigger Property="IsMouseOver" Value="True">
                                 <Setter TargetName="Bd" Property="Background" Value="#374151"/>
                                 <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
                                 <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                             </Trigger>
                         </ControlTemplate.Triggers>
                     </ControlTemplate>
                 </Setter.Value>
             </Setter>
         </Style>
         
         <!-- Modern ListBox Style -->
         <Style x:Key="ModernListBoxStyle" TargetType="ListBox">
             <Setter Property="Background" Value="Transparent"/>
             <Setter Property="BorderThickness" Value="0"/>
             <Setter Property="Padding" Value="0"/>
             <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
             <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
             <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
             <Setter Property="Template">
                 <Setter.Value>
                     <ControlTemplate TargetType="ListBox">
                         <Border Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 CornerRadius="8">
                             <ScrollViewer Padding="{TemplateBinding Padding}"
                                         Focusable="False"
                                         HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                         VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                         CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}">
                                 <ItemsPresenter />
                             </ScrollViewer>
                         </Border>
                     </ControlTemplate>
                 </Setter.Value>
             </Setter>
         </Style>
         
         <!-- Modern ScrollViewer Style -->
         <Style x:Key="ModernScrollViewerStyle" TargetType="ScrollViewer">
             <Setter Property="Background" Value="Transparent"/>
             <Setter Property="BorderThickness" Value="0"/>
             <Setter Property="Padding" Value="0"/>
             <Setter Property="Template">
                 <Setter.Value>
                     <ControlTemplate TargetType="ScrollViewer">
                         <Grid>
                             <Grid.ColumnDefinitions>
                                 <ColumnDefinition Width="*"/>
                                 <ColumnDefinition Width="Auto"/>
                             </Grid.ColumnDefinitions>
                             <Grid.RowDefinitions>
                                 <RowDefinition Height="*"/>
                                 <RowDefinition Height="Auto"/>
                             </Grid.RowDefinitions>
                             
                             <ScrollContentPresenter Grid.Column="0" Grid.Row="0" 
                                 CanContentScroll="{TemplateBinding CanContentScroll}"
                                 Content="{TemplateBinding Content}"
                                 ContentTemplate="{TemplateBinding ContentTemplate}"
                                 Grid.ColumnSpan="2"
                                 CanHorizontallyScroll="False"
                                 CanVerticallyScroll="False"
                                 ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                             
                             <ScrollBar Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar"
                                 Orientation="Vertical"
                                 Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                                 Minimum="0"
                                 Value="{TemplateBinding ScrollViewer.VerticalOffset}"
                                 ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                                 Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                                 Background="Transparent"
                                 Foreground="{StaticResource PrimaryColor}"
                                 Width="8">
                                 <ScrollBar.Template>
                                     <ControlTemplate TargetType="ScrollBar">
                                         <Track x:Name="PART_Track" IsDirectionReversed="true">
                                             <Track.Thumb>
                                                 <Thumb Background="{StaticResource PrimaryColor}">
                                                     <Thumb.Template>
                                                         <ControlTemplate TargetType="Thumb">
                                                             <Border Background="{TemplateBinding Background}" CornerRadius="4"/>
                                                         </ControlTemplate>
                                                     </Thumb.Template>
                                                 </Thumb>
                                             </Track.Thumb>
                                         </Track>
                                     </ControlTemplate>
                                 </ScrollBar.Template>
                             </ScrollBar>
                         </Grid>
                     </ControlTemplate>
                 </Setter.Value>
             </Setter>
         </Style>
        <Style x:Key="NeonComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        <Style x:Key="NeonComboBox" TargetType="ComboBox" BasedOn="{StaticResource ModernComboBox}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        </ResourceDictionary>
    </Window.Resources>
    
    <!-- Main Layout -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- Title Bar -->
        <Border Grid.Row="0" Background="{StaticResource BackgroundGradient}" Height="60">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- Logo and Title -->
                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="20,0,0,0">
                    <Border Width="32" Height="32" CornerRadius="16" Background="{StaticResource PrimaryGradient}" Margin="0,0,12,0">
                        <TextBlock Text="V" FontWeight="Bold" FontSize="18" 
                                 Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <TextBlock Text="Demon Valorant Manager" FontWeight="Bold" FontSize="18" 
                             Foreground="{StaticResource TextPrimaryColor}" VerticalAlignment="Center"/>
                </StackPanel>
                
                                <!-- Window Controls -->
                                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,20,0">
                                    <Button x:Name="btnMinimize" Click="btnMinimize_Click" Width="32" Height="32" Margin="8,0" 
                                            Style="{StaticResource SecondaryButton}" ToolTip="Minimize">
                                        <TextBlock Text="─" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Button>
                                    <Button x:Name="btnClose" Click="btnClose_Click" Width="32" Height="32" Margin="8,0" 
                                            Style="{StaticResource SecondaryButton}" ToolTip="Close">
                                        <TextBlock Text="✕" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Button>
                                </StackPanel>
            </Grid>
        </Border>
        
                 <!-- Main Content -->
         <Grid Grid.Row="1" Background="{StaticResource BackgroundGradient}">
             <Grid.ColumnDefinitions>
                 <ColumnDefinition Width="140" MinWidth="120" MaxWidth="160"/>
                 <ColumnDefinition Width="*"/>
             </Grid.ColumnDefinitions>
            
            <!-- Sidebar -->
            <Grid Grid.Column="0" Background="#111111">
                <Grid.Effect>
                    <DropShadowEffect Color="#00BFFF" BlurRadius="10" ShadowDepth="0" Opacity="0.1"/>
                </Grid.Effect>
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <!-- Drag Handle for Sidebar -->
                <Border Grid.Row="0" Background="Transparent" MouseLeftButtonDown="Window_MouseLeftButtonDown" 
                        Cursor="SizeAll" Margin="0,0,0,0" Panel.ZIndex="1"/>
                
                <!-- Sidebar Tabs -->
                <StackPanel Grid.Row="0" Margin="20,20,20,20" VerticalAlignment="Top" Panel.ZIndex="2">
                    <!-- LOGIN Tab -->
                    <Border x:Name="LoginTab" Style="{StaticResource SmoothSidebarTabStyle}"
                            MouseLeftButtonDown="LoginTab_MouseLeftButtonDown">
                        <TextBlock Text="LOGIN" FontWeight="Bold" FontSize="14" 
                                 Foreground="White" HorizontalAlignment="Center"/>
                    </Border>
                    
                    <!-- MANAGE Tab -->
                    <Border x:Name="ManageTab" Style="{StaticResource SmoothSidebarTabStyle}"
                            MouseLeftButtonDown="ManageTab_MouseLeftButtonDown">
                        <TextBlock Text="MANAGE" FontWeight="Bold" FontSize="14" 
                                 Foreground="White" HorizontalAlignment="Center"/>
                    </Border>
                    
                    <!-- SETTINGS Tab -->
                    <Border x:Name="SettingsTab" Style="{StaticResource SmoothSidebarTabStyle}"
                            MouseLeftButtonDown="SettingsTab_MouseLeftButtonDown">
                        <TextBlock Text="SETTINGS" FontWeight="Bold" FontSize="14" 
                                 Foreground="White" HorizontalAlignment="Center"/>
                    </Border>
                </StackPanel>
                
                <!-- Sidebar Footer -->
                <StackPanel Grid.Row="1" Margin="20,0,20,20" VerticalAlignment="Bottom">
                    <TextBlock Text="v1.1.0" FontSize="10" Foreground="#666666" 
                             HorizontalAlignment="Center"/>
                </StackPanel>
                
                <!-- Right Border -->
                <Border Grid.RowSpan="2" Grid.Column="0" BorderThickness="1,0,0,0" 
                        BorderBrush="{StaticResource BorderColor}" HorizontalAlignment="Right" Width="1"/>
            </Grid>
            
                                                  <!-- Main Content Area -->
             <Grid Grid.Column="1" Margin="24">
                 <Grid.RowDefinitions>
                     <RowDefinition Height="Auto"/>
                     <RowDefinition Height="*"/>
                     <RowDefinition Height="Auto"/>
                 </Grid.RowDefinitions>
                 
                 <!-- Content Header -->
                 <Border Grid.Row="0" Style="{StaticResource CardStyle}" Margin="0,0,0,24">
                     <StackPanel>
                         <TextBlock x:Name="txtContentTitle" Text="Welcome to Demon Valorant Manager" FontSize="24" FontWeight="Bold" 
                                  Foreground="{StaticResource TextPrimaryColor}" Margin="0,0,0,8"/>
                         <TextBlock x:Name="txtContentSubtitle" Text="Select a tab from the sidebar to get started" FontSize="16" 
                                  Foreground="{StaticResource TextSecondaryColor}"/>
                     </StackPanel>
                 </Border>
                 
                 <!-- Content Area -->
                 <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Style="{StaticResource ModernScrollViewerStyle}"
                               PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                     <StackPanel x:Name="ContentArea">
                         
                         <!-- LOGIN Tab Content - NEW LAYOUT -->
                         <Grid x:Name="LoginTabContent" Visibility="Collapsed">
                             <Grid.RowDefinitions>
                                 <RowDefinition Height="Auto"/>
                                 <RowDefinition Height="*"/>
                             </Grid.RowDefinitions>
                             
                             <!-- Sort Controls -->
                             <Border Grid.Row="0" Background="{DynamicResource CardBackgroundBrush}" CornerRadius="16" Padding="20" Effect="{DynamicResource CardShadow}" Margin="0,0,0,16">
                                 <StackPanel Orientation="Horizontal">
                                     <TextBlock Text="🎯 Sort by Rank:" FontWeight="Bold" FontSize="16" Foreground="{DynamicResource PrimaryColor}" VerticalAlignment="Center" Margin="0,0,16,0">
                                         <TextBlock.Effect>
                                             <DropShadowEffect Color="#00BFFF" BlurRadius="8" ShadowDepth="0" Opacity="0.6"/>
                                         </TextBlock.Effect>
                                     </TextBlock>
                                     <ComboBox x:Name="cmbSortRank" Width="180" Height="36" FontSize="14" Margin="0,0,16,0"
                                               Style="{StaticResource NeonComboBox}"
                                               SelectionChanged="cmbSortRank_SelectionChanged">
                                         <ComboBoxItem Content="No Sort" Tag="None" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                         <ComboBoxItem Content="Low to High" Tag="Ascending" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                         <ComboBoxItem Content="High to Low" Tag="Descending" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                     </ComboBox>
                                     <Button Content="Apply Sort" 
                                             Command="{Binding LoginViewModel.ApplySortCommand}"
                                             Style="{StaticResource PrimaryButton}" 
                                             Width="120" Height="36" FontSize="14" FontWeight="SemiBold"/>
                                 </StackPanel>
                             </Border>
                             
                             <!-- Account Cards Grid -->
                             <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"
                                           CanContentScroll="True"
                                           Focusable="False" IsTabStop="False"
                                           PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                                 <ItemsControl x:Name="icLoginAccounts" ItemsSource="{Binding LoginViewModel.LoginAccounts}" Margin="0,0,0,24">
                                     <ItemsControl.ItemsPanel>
                                         <ItemsPanelTemplate>
                                             <WrapPanel Orientation="Horizontal" />
                                         </ItemsPanelTemplate>
                                     </ItemsControl.ItemsPanel>
                                     <ItemsControl.ItemTemplate>
                                         <DataTemplate>
                                             <Border Background="{DynamicResource SurfaceColor}" CornerRadius="16" Padding="16" Effect="{DynamicResource CardShadow}" 
                                                     Margin="6" MinHeight="240" Width="260">
                                                 <Border.RenderTransform>
                                                     <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                 </Border.RenderTransform>
                                                 <Grid>
                                                     <Grid.RowDefinitions>
                                                         <RowDefinition Height="Auto"/>
                                                         <RowDefinition Height="Auto"/>
                                                         <RowDefinition Height="*"/>
                                                         <RowDefinition Height="Auto"/>
                                                     </Grid.RowDefinitions>
                                                     
                                                     <!-- Name -->
                                                     <TextBlock Grid.Row="1" Text="{Binding GameName}" FontSize="15" FontWeight="Bold" 
                                                              Foreground="{DynamicResource TextPrimaryColor}" TextAlignment="Center" Margin="0,0,0,6"/>
                                                     <TextBlock Text="{Binding FullUsername}" FontSize="11" 
                                                              Foreground="{DynamicResource TextSecondaryColor}" TextAlignment="Center" Margin="0,0,0,20"/>
                                                     
                                                     <!-- Rank -->
                                                     <StackPanel Grid.Row="2" VerticalAlignment="Bottom" Margin="0,0,0,8">
                                                         <!-- Loading Animation -->
                                                         <Border Style="{StaticResource RankLoadingStyle}" 
                                                                 Margin="0,0,0,6"
                                                                 Visibility="{Binding IsRankLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                                         <!-- Current Rank Image - Show when not loading and not failed -->
                                                         <Border Width="36" Height="36" CornerRadius="18" 
                                                                 Background="{DynamicResource SurfaceColorLight}" Margin="0,0,0,6"
                                                                 Visibility="{Binding ShouldDisplayRank, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                             <Image Source="{Binding DisplayRank, Converter={StaticResource RankToIconConverter}}"
                                                                    Stretch="UniformToFill" Margin="2"/>
                                                         </Border>
                                                         
                                                         <!-- Rank Text - Show when not loading and not failed -->
                                                         <TextBlock Text="{Binding DisplayRank}" FontSize="10" 
                                                                  Foreground="{DynamicResource TextSecondaryColor}" TextAlignment="Center"
                                                                  Visibility="{Binding ShouldDisplayRank, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                         
                                                         <!-- Loading Text -->
                                                         <TextBlock Text="Loading..." FontSize="10" 
                                                                  Foreground="{DynamicResource PrimaryColor}" TextAlignment="Center"
                                                                  Visibility="{Binding IsRankLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                         
                                                         <!-- Error Text - Only show when failed -->
                                                         <TextBlock Text="Failed to load" FontSize="10" 
                                                                  Foreground="#FF4444" TextAlignment="Center"
                                                                  Visibility="{Binding IsRankFailed, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                     </StackPanel>
                                                     
                                                     <!-- Login Button -->
                                                     <Button Grid.Row="3" Content="LOGIN" 
                                                             Command="{Binding DataContext.LoginViewModel.LoginCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                             CommandParameter="{Binding}"
                                                             Style="{StaticResource PrimaryButton}" 
                                                             Margin="0,8,0,12" Height="32" FontSize="13" MaxWidth="220"/>
                                                 </Grid>
                                             </Border>
                                         </DataTemplate>
                                     </ItemsControl.ItemTemplate>
                                 </ItemsControl>
                             </ScrollViewer>
                                 
                                 <!-- Hidden ListBox for code-behind access -->
                                 <ListBox x:Name="lbLoginAccounts" ItemsSource="{Binding LoginViewModel.LoginAccounts}" 
                                         Visibility="Collapsed" SelectionChanged="lbLoginAccounts_SelectionChanged"
                                         MouseDoubleClick="lbLoginAccounts_MouseDoubleClick"/>
                         </Grid>
                         
                         <!-- MANAGE Tab Content - NEW LAYOUT -->
                         <Grid x:Name="ManageTabContent" Visibility="Collapsed">
                             <Grid.RowDefinitions>
                                 <RowDefinition Height="Auto"/>
                                 <RowDefinition Height="Auto"/>
                                 <RowDefinition Height="*"/>
                             </Grid.RowDefinitions>
                             
                             <!-- Server Management Section -->
                             <Border Grid.Row="0" Background="{DynamicResource CardBackgroundBrush}" CornerRadius="16" Padding="20" Effect="{DynamicResource CardShadow}" Margin="0,0,0,16">
                                 <StackPanel>
                                     <TextBlock Text="🌐 Server Management" FontSize="18" FontWeight="Bold" Foreground="{DynamicResource TextPrimaryColor}" Margin="0,0,0,16"/>
                                     
                                     <Grid>
                                         <Grid.ColumnDefinitions>
                                             <ColumnDefinition Width="*"/>
                                             <ColumnDefinition Width="Auto"/>
                                             <ColumnDefinition Width="*"/>
                                         </Grid.ColumnDefinitions>
                                         
                                         <!-- Default Server Selection -->
                                         <StackPanel Grid.Column="0" Margin="0,0,16,0">
                                             <TextBlock Text="Default Server for Rank Fetching" FontWeight="SemiBold" FontSize="14" Margin="0,0,0,8" Foreground="{DynamicResource TextPrimaryColor}"/>
                                             <TextBlock Text="This server will be used when fetching ranks for accounts without a specific region" FontSize="11" Margin="0,0,0,8" Foreground="{DynamicResource TextSecondaryColor}"/>
                                             <ComboBox SelectedValue="{Binding ManageViewModel.DefaultServer}" 
                                                       Style="{StaticResource ModernComboBox}" Height="36" FontSize="13" Padding="8">
                                                 <ComboBoxItem Content="Asia Pacific (AP)" Tag="AP" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                                 <ComboBoxItem Content="North America (NA)" Tag="NA" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                                 <ComboBoxItem Content="Europe (EU)" Tag="EU" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                                 <ComboBoxItem Content="Korea (KR)" Tag="KR" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                                 <ComboBoxItem Content="Brazil (BR)" Tag="BR" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                                 <ComboBoxItem Content="Latin America (LATAM)" Tag="LATAM" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                             </ComboBox>
                                         </StackPanel>
                                         
                                         <!-- Server Info -->
                                         <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="16,0">
                                             <TextBlock Text="ℹ️" FontSize="20" HorizontalAlignment="Center"/>
                                         </StackPanel>
                                         
                                         <!-- Server Information -->
                                         <StackPanel Grid.Column="2" Margin="16,0,0,0">
                                             <TextBlock Text="Server Information" FontWeight="SemiBold" FontSize="14" Margin="0,0,0,8" Foreground="{DynamicResource TextPrimaryColor}"/>
                                             <TextBlock Text="• AP: Asia Pacific (Recommended)" FontSize="11" Foreground="{DynamicResource TextSecondaryColor}"/>
                                             <TextBlock Text="• NA: North America" FontSize="11" Foreground="{DynamicResource TextSecondaryColor}"/>
                                             <TextBlock Text="• EU: Europe" FontSize="11" Foreground="{DynamicResource TextSecondaryColor}"/>
                                             <TextBlock Text="• KR: Korea" FontSize="11" Foreground="{DynamicResource TextSecondaryColor}"/>
                                             <TextBlock Text="• BR: Brazil" FontSize="11" Foreground="{DynamicResource TextSecondaryColor}"/>
                                             <TextBlock Text="• LATAM: Latin America" FontSize="11" Foreground="{DynamicResource TextSecondaryColor}"/>
                                         </StackPanel>
                                     </Grid>
                                     
                                     <!-- Server Actions -->
                                     <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,16,0,0">
                                         <Button Content="🔄 Update All Accounts Server" 
                                                 Command="{Binding ManageViewModel.UpdateAllAccountsServerCommand}"
                                                 Style="{StaticResource PrimaryButton}" 
                                                 Width="200" Height="32" FontSize="12" Margin="0,0,8,0"/>
                                         <Button Content="📊 Test Server Connection" 
                                                 Command="{Binding ManageViewModel.TestServerConnectionCommand}"
                                                 Style="{StaticResource SecondaryButton}" 
                                                 Width="160" Height="32" FontSize="12"/>
                                     </StackPanel>
                                 </StackPanel>
                             </Border>
                             
                             <!-- Main Content -->
                             <Grid Grid.Row="2">
                                 <Grid.ColumnDefinitions>
                                     <ColumnDefinition Width="400"/>
                                     <ColumnDefinition Width="*"/>
                                 </Grid.ColumnDefinitions>
                                 
                                 <!-- Account Form Panel -->
                                 <Border Grid.Column="0" Background="{DynamicResource CardBackgroundBrush}" CornerRadius="16" Padding="24" Effect="{DynamicResource CardShadow}" Margin="0,0,16,0">
                                     <ScrollViewer VerticalScrollBarVisibility="Auto"
                                                   PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                    <StackPanel>
                                             <TextBlock Text="Account Details" FontSize="18" FontWeight="Bold" Foreground="{DynamicResource TextPrimaryColor}" Margin="0,0,0,20"/>
                                             
                            <!-- Game Name -->
                                             <StackPanel Margin="0,0,0,16">
                                                 <TextBlock Text="Game Name" FontWeight="SemiBold" FontSize="14" Margin="0,0,0,6" Foreground="{DynamicResource TextPrimaryColor}"/>
                                <TextBox Text="{Binding ManageViewModel.GameName, UpdateSourceTrigger=PropertyChanged}" 
                                                          Style="{StaticResource ModernTextBox}" Height="40" FontSize="14" Padding="8"/>
                            </StackPanel>
                                             
                            <!-- Tag Line -->
                                             <StackPanel Margin="0,0,0,16">
                                                 <TextBlock Text="Tag Line" FontWeight="SemiBold" FontSize="14" Margin="0,0,0,6" Foreground="{DynamicResource TextPrimaryColor}"/>
                                <TextBox Text="{Binding ManageViewModel.TagLine, UpdateSourceTrigger=PropertyChanged}" 
                                                          Style="{StaticResource ModernTextBox}" Height="40" FontSize="14" Padding="8"/>
                            </StackPanel>
                                             
                            <!-- Username -->
                                             <StackPanel Margin="0,0,0,16">
                                                 <TextBlock Text="Username" FontWeight="SemiBold" FontSize="14" Margin="0,0,0,6" Foreground="{DynamicResource TextPrimaryColor}"/>
                                <TextBox Text="{Binding ManageViewModel.Username, UpdateSourceTrigger=PropertyChanged}" 
                                                          Style="{StaticResource ModernTextBox}" Height="40" FontSize="14" Padding="8"/>
                            </StackPanel>
                                             
                            <!-- Password -->
                                             <StackPanel Margin="0,0,0,16">
                                                 <TextBlock Text="Password" FontWeight="SemiBold" FontSize="14" Margin="0,0,0,6" Foreground="{DynamicResource TextPrimaryColor}"/>
                                <PasswordBox x:Name="txtPassword" 
                                                              Style="{StaticResource ModernPasswordBox}" Height="40" FontSize="14" Padding="8"
                                             PasswordChanged="txtPassword_PasswordChanged"/>
                            </StackPanel>
                        
                        <!-- Server/Region Selection -->
                                             <StackPanel Margin="0,0,0,16">
                                                 <TextBlock Text="Server/Region" FontWeight="SemiBold" FontSize="14" Margin="0,0,0,6" Foreground="{DynamicResource TextPrimaryColor}"/>
                                                 <TextBlock Text="Select the server for rank fetching" FontSize="11" Margin="0,0,0,8" Foreground="{DynamicResource TextSecondaryColor}"/>
                                <ComboBox SelectedItem="{Binding ManageViewModel.SelectedRegionItem}" 
                                                           Style="{StaticResource ModernComboBox}" Height="40" FontSize="14" Padding="8">
                                    <ComboBoxItem Content="Asia Pacific (AP)" Tag="AP" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                    <ComboBoxItem Content="North America (NA)" Tag="NA" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                    <ComboBoxItem Content="Europe (EU)" Tag="EU" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                    <ComboBoxItem Content="Korea (KR)" Tag="KR" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                    <ComboBoxItem Content="Brazil (BR)" Tag="BR" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                    <ComboBoxItem Content="Latin America (LATAM)" Tag="LATAM" Style="{StaticResource NeonComboBoxItemStyle}"/>
                                </ComboBox>
                            </StackPanel>
                        
                        <!-- XÓA: Avatar Path & Browse -->
                        <!--
                                             <StackPanel Margin="0,0,0,24">
                                                 <TextBlock Text="Avatar Path" FontWeight="SemiBold" FontSize="14" Margin="0,0,0,6" Foreground="{DynamicResource TextPrimaryColor}"/>
                                <DockPanel>
                                    <TextBox Text="{Binding ManageViewModel.AvatarPath}" 
                                                              Style="{StaticResource ModernTextBox}" Height="40" FontSize="14" Padding="8" Margin="0,0,8,0"/>
                                    <Button Content="Browse" Command="{Binding ManageViewModel.SelectAvatarCommand}"
                                                             Style="{StaticResource SecondaryButton}" Width="80" Height="40" Padding="8,0"/>
                                </DockPanel>
                            </StackPanel>
                        -->
                        
                    <!-- Action Buttons -->
                                             <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,0">
                            <Button Content="Add Account" Command="{Binding ManageViewModel.AddAccountCommand}"
                                                         Style="{StaticResource PrimaryButton}" Width="90" Height="36" FontSize="12" Padding="8,0" Margin="0,0,8,0"/>
                            <Button Content="Update" Command="{Binding ManageViewModel.UpdateAccountCommand}"
                                                         Style="{StaticResource SecondaryButton}" Width="90" Height="36" FontSize="12" Padding="8,0" Margin="0,0,8,0"/>
                            <Button Content="Delete" Command="{Binding ManageViewModel.DeleteAccountCommand}"
                                                         Style="{StaticResource SecondaryButton}" Width="90" Height="36" FontSize="12" Padding="8,0"/>
                        </StackPanel>
                    </StackPanel>
                                     </ScrollViewer>
                </Border>

                                 <!-- Account List Panel -->
                                 <Border Grid.Column="1" Background="{DynamicResource CardBackgroundBrush}" CornerRadius="16" Padding="24" Effect="{DynamicResource CardShadow}">
                    <StackPanel>
                                         <TextBlock Text="Account List" FontSize="18" FontWeight="Bold" Foreground="{DynamicResource TextPrimaryColor}" Margin="0,0,0,16"/>
                                         
                        <!-- Empty State -->
                                         <TextBlock Text="No accounts found. Add your first account to get started."
                                                    FontSize="14"
                                   Foreground="{DynamicResource TextSecondaryColor}"
                                   HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                   Visibility="{Binding ManageViewModel.Accounts.Count, Converter={StaticResource ZeroToVisibilityConverter}}"/>
                                         
                                         <!-- Account List -->
                        <ListView x:Name="lvAccounts"
                                  ItemsSource="{Binding ManageViewModel.Accounts}"
                                  SelectedItem="{Binding ManageViewModel.SelectedAccount}"
                                  Background="Transparent"
                                  BorderThickness="0"
                                  Style="{StaticResource ModernListViewStyle}"
                                                   VerticalAlignment="Stretch">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Padding" Value="0"/>
                                                     <Setter Property="Margin" Value="0,0,0,12"/>
                                    <Setter Property="FontFamily" Value="Segoe UI"/>
                                                     <Setter Property="FontSize" Value="14"/>
                                                     <Setter Property="Background" Value="Transparent"/>
                                                     <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListViewItem">
                                                <Border x:Name="Bd"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        CornerRadius="12"
                                                        SnapsToDevicePixels="true">
                                                    <ContentPresenter />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                                         <Setter TargetName="Bd" Property="Background" Value="{DynamicResource PrimaryColor}"/>
                                                                     </Trigger>
                                                                     <Trigger Property="IsMouseOver" Value="True">
                                                                         <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SurfaceColorLight}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Border Background="{DynamicResource SurfaceColor}" CornerRadius="12" Padding="16" Effect="{DynamicResource CardShadow}"
                                            MouseLeftButtonDown="AccountItem_MouseLeftButtonDown"
                                            Cursor="Hand">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                                             
                                                             <!-- Avatar -->
                                            <Grid Width="48" Height="48" VerticalAlignment="Center">
                                                                 <Ellipse Fill="{DynamicResource SurfaceColorLight}" />
                                                <Image Source="{Binding AvatarPath, Converter={StaticResource StringToImageSourceConverter}}"
                                                       Width="48" Height="48" Stretch="UniformToFill" ClipToBounds="True"
                                                       Visibility="{Binding AvatarPath, Converter={StaticResource NullOrEmptyToVisibilityConverter}}"/>
                                            </Grid>
                                                             
                                            <!-- Account Info -->
                                                             <StackPanel Grid.Column="1" Margin="16,0" VerticalAlignment="Center">
                                                                 <TextBlock Text="{Binding GameName}" FontWeight="Bold" FontSize="16" Foreground="{DynamicResource TextPrimaryColor}"/>
                                                                 <TextBlock Text="{Binding FullUsername}" FontSize="13" Foreground="{DynamicResource TextSecondaryColor}" ToolTip="{Binding FullUsername}"/>
                                                <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                                                                     <Image Source="{Binding IsRankFailed, Converter={StaticResource RankErrorIconConverter}}" Width="20" Height="20" Margin="0,0,6,0"
                                                                            Visibility="{Binding IsRankFailed, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                                     <Image Width="20" Height="20" Margin="0,0,6,0"
                                                                            Source="{Binding DisplayRank, Converter={StaticResource RankToIconConverter}}">
                                                                     <Image.Style>
                                                                         <Style TargetType="Image">
                                                                             <Setter Property="Visibility" Value="Visible"/>
                                                                             <Style.Triggers>
                                                                                 <DataTrigger Binding="{Binding DisplayRank, Converter={StaticResource RankToIconConverter}}" Value="{x:Null}">
                                                                                     <Setter Property="Visibility" Value="Collapsed"/>
                                                                                 </DataTrigger>
                                                                             </Style.Triggers>
                                                                         </Style>
                                                                     </Image.Style>
                                                                 </Image>
                                                                     <TextBlock Text="{Binding DisplayRank}" FontSize="12" Foreground="{DynamicResource TextSecondaryColor}"/>
                                                                     <TextBlock Text=" | " FontSize="12" Foreground="{DynamicResource TextSecondaryColor}" Margin="4,0"/>
                                                                     <TextBlock Text="{Binding DisplayRegion}" FontSize="12" Foreground="{DynamicResource PrimaryColor}" FontWeight="SemiBold">
                                                                         <TextBlock.ToolTip>
                                                                             <StackPanel>
                                                                                 <TextBlock Text="Server Information" FontWeight="Bold" Margin="0,0,0,4"/>
                                                                                 <TextBlock Text="{Binding DisplayRegion, StringFormat='Region: {0}'}" FontSize="11"/>
                                                                                 <TextBlock Text="{Binding LastRankUpdate, StringFormat='Last Updated: {0:g}'}" FontSize="11"/>
                                                                                 <TextBlock Text="{Binding LastError, StringFormat='Error: {0}'}" FontSize="11" Foreground="Red" 
                                                                                          Visibility="{Binding LastError, Converter={StaticResource NullOrEmptyToVisibilityConverter}}"/>
                                                                             </StackPanel>
                                                                         </TextBlock.ToolTip>
                                                                     </TextBlock>
                                                </StackPanel>
                                            </StackPanel>
                                                             
                                            <!-- Actions -->
                                            <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center">
                                                <Button Content="Edit"
                                                        Command="{Binding DataContext.ManageViewModel.EditAccountCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding}"
                                                        Style="{StaticResource PrimaryButton}"
                                                                         Width="60" Height="32" Margin="0,0,8,0" FontSize="12"/>
                                                <Button Content="Delete"
                                                        Command="{Binding DataContext.ManageViewModel.DeleteAccountCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        Style="{StaticResource SecondaryButton}"
                                                                         Width="60" Height="32" FontSize="12"/>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>
                </Border>
                             </Grid>
                         </Grid>
                         
                         <!-- SETTINGS Tab Content - IMPROVED LAYOUT -->
                         <Grid x:Name="SettingsTabContent" Visibility="Collapsed">
                             <Grid.RowDefinitions>
                                 <RowDefinition Height="Auto"/>
                                 <RowDefinition Height="*"/>
                             </Grid.RowDefinitions>
                             
                             <!-- Header Section -->
                             <Border Grid.Row="0" Background="{DynamicResource CardBackgroundBrush}" CornerRadius="16" Padding="24" Effect="{DynamicResource CardShadow}" Margin="0,0,0,24">
                                 <StackPanel>
                                     <TextBlock Text="Settings" FontSize="28" FontWeight="Bold" Foreground="{DynamicResource TextPrimaryColor}" Margin="0,0,0,8"/>
                                     <TextBlock Text="Configure your application preferences and API settings" FontSize="16" Foreground="{DynamicResource TextSecondaryColor}"/>
                                 </StackPanel>
                             </Border>
                             
                             <!-- Settings Content -->
                             <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto"
                                           PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                                 <StackPanel>
                                 <!-- General Settings -->
                                     <Border Background="{DynamicResource CardBackgroundBrush}" CornerRadius="16" Padding="24" Effect="{DynamicResource CardShadow}" Margin="0,0,0,24">
                                         <StackPanel>
                                             <TextBlock Text="General Settings" FontSize="20" FontWeight="Bold" Foreground="{DynamicResource TextPrimaryColor}" Margin="0,0,0,20"/>
                                             
                                             <Grid Margin="0,0,0,20">
                                                 <Grid.ColumnDefinitions>
                                                     <ColumnDefinition Width="*"/>
                                                     <ColumnDefinition Width="Auto"/>
                                                 </Grid.ColumnDefinitions>
                                                 <Grid.RowDefinitions>
                                                     <RowDefinition Height="Auto"/>
                                                     <RowDefinition Height="Auto"/>
                                                 </Grid.RowDefinitions>
                                                 
                                                 <!-- Auto-start Setting -->
                                                 <StackPanel Grid.Row="0" Grid.Column="0">
                                                     <TextBlock Text="Auto-start on Windows Boot" FontWeight="SemiBold" FontSize="15" Foreground="{DynamicResource TextPrimaryColor}"/>
                                                     <TextBlock Text="Launch the application automatically when Windows starts" FontSize="13" Foreground="{DynamicResource TextSecondaryColor}" Margin="0,4,0,0"/>
                                                 </StackPanel>
                                                 <ToggleButton Grid.Row="0" Grid.Column="1"
                                                              IsChecked="{Binding SettingsViewModel.AutoStartEnabled}" 
                                                              Style="{StaticResource ToggleSwitchStyle}"
                                                              VerticalAlignment="Top"
                                                              Margin="20,0,0,0"/>
                                                 
                                                 <!-- Minimize to Tray Setting -->
                                                 <StackPanel Grid.Row="1" Grid.Column="0" Margin="0,20,0,0">
                                                     <TextBlock Text="Minimize to System Tray" FontWeight="SemiBold" FontSize="15" Foreground="{DynamicResource TextPrimaryColor}"/>
                                                     <TextBlock Text="Keep the application running in the system tray when minimized" FontSize="13" Foreground="{DynamicResource TextSecondaryColor}" Margin="0,4,0,0"/>
                                                 </StackPanel>
                                                 <ToggleButton Grid.Row="1" Grid.Column="1"
                                                              IsChecked="{Binding SettingsViewModel.MinimizeToTrayEnabled}" 
                                                              Style="{StaticResource ToggleSwitchStyle}"
                                                              VerticalAlignment="Top"
                                                              Margin="20,0,0,0"/>
                                             </Grid>
                                         </StackPanel>
                                     </Border>
                                     
                                     <!-- API Settings -->
                                     <Border Background="{DynamicResource CardBackgroundBrush}" CornerRadius="16" Padding="24" Effect="{DynamicResource CardShadow}" Margin="0,0,0,24">
                                         <StackPanel>
                                             <TextBlock Text="API Configuration" FontSize="20" FontWeight="Bold" Foreground="{DynamicResource TextPrimaryColor}" Margin="0,0,0,20"/>
                                             
                                             <!-- HenrikDev API Key -->
                                             <StackPanel Margin="0,0,0,20">
                                                 <TextBlock Text="HenrikDev API Key" FontWeight="SemiBold" FontSize="15" Foreground="{DynamicResource TextPrimaryColor}" Margin="0,0,0,8"/>
                                                 <TextBlock Text="Used for fetching Valorant rank data from HenrikDev API" FontSize="13" Foreground="{DynamicResource TextSecondaryColor}" Margin="0,0,0,12"/>
                                                 
                                                 <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                                                     <TextBlock Text="Current:" FontSize="12" Foreground="{DynamicResource TextSecondaryColor}" VerticalAlignment="Center" Margin="0,0,8,0"/>
                                                     <TextBlock Text="{Binding SettingsViewModel.CurrentHenrikDevApiKey}" FontSize="12" FontWeight="SemiBold" Foreground="{DynamicResource PrimaryColor}" VerticalAlignment="Center"/>
                                                 </StackPanel>
                                                 
                                                 <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                                                     <TextBox Text="{Binding SettingsViewModel.HenrikDevApiKey}" 
                                                              Style="{StaticResource ModernTextBox}"
                                                              Width="300"
                                                              Height="36"
                                                              FontSize="12"
                                                              Padding="12,8"
                                                              VerticalContentAlignment="Center"
                                                              ToolTip="Enter your HenrikDev API key here"
                                                              Margin="0,0,12,0"/>
                                                     
                                                     <Button Content="Save" 
                                                             Command="{Binding SettingsViewModel.SaveHenrikDevApiKeyCommand}"
                                                             Style="{StaticResource SettingsPrimaryButtonStyle}" 
                                                             Width="80"/>
                                                 </StackPanel>
                                                 
                                                 <TextBlock Text="Get your API key from: https://henrikdev.xyz/" FontSize="11" Foreground="{DynamicResource TextSecondaryColor}" Margin="0,0,0,8"/>
                                                 <TextBlock Text="Enter your HenrikDev API key in the field above and click Save" FontSize="11" Foreground="{DynamicResource TextSecondaryColor}" Margin="0,0,0,8"/>
                                             </StackPanel>
                                             
                                             <!-- Refresh Button -->
                                             <StackPanel Orientation="Horizontal" Margin="0,16,0,0">
                                                 <Button Content="Refresh Display" 
                                                         Command="{Binding SettingsViewModel.UpdateApiKeyCommand}"
                                                         Style="{StaticResource SettingsButtonStyle}" 
                                                         Width="140"/>
                                             </StackPanel>
                                         </StackPanel>
                                     </Border>
                                 
                                     <!-- About Section -->
                                     <Border Background="{DynamicResource CardBackgroundBrush}" CornerRadius="16" Padding="24" Effect="{DynamicResource CardShadow}">
                                         <StackPanel>
                                             <TextBlock Text="About" FontSize="20" FontWeight="Bold" Foreground="{DynamicResource TextPrimaryColor}" Margin="0,0,0,20"/>
                                             
                                             <Grid Margin="0,0,0,20">
                                                 <Grid.ColumnDefinitions>
                                                     <ColumnDefinition Width="Auto"/>
                                                     <ColumnDefinition Width="*"/>
                                                 </Grid.ColumnDefinitions>
                                                 <Grid.RowDefinitions>
                                                     <RowDefinition Height="Auto"/>
                                                     <RowDefinition Height="Auto"/>
                                                     <RowDefinition Height="Auto"/>
                                                 </Grid.RowDefinitions>
                                                 
                                                 <TextBlock Text="Version:" FontWeight="SemiBold" FontSize="15" Foreground="{DynamicResource TextPrimaryColor}" Grid.Row="0" Grid.Column="0" Margin="0,0,16,8"/>
                                                 <TextBlock Text="1.1.0" FontSize="15" Foreground="{DynamicResource TextSecondaryColor}" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"/>
                                                 
                                                 <TextBlock Text="Developer:" FontWeight="SemiBold" FontSize="15" Foreground="{DynamicResource TextPrimaryColor}" Grid.Row="1" Grid.Column="0" Margin="0,0,16,8"/>
                                                 <TextBlock Text="Demon" FontSize="15" Foreground="{DynamicResource TextSecondaryColor}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"/>
                                                 
                                                 <TextBlock Text="Purpose:" FontWeight="SemiBold" FontSize="15" Foreground="{DynamicResource TextPrimaryColor}" Grid.Row="2" Grid.Column="0" Margin="0,0,16,8"/>
                                                 <TextBlock Text="Valorant Multi-Account Manager" FontSize="15" Foreground="{DynamicResource TextSecondaryColor}" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center"/>
                                             </Grid>
                                             
                                             <!-- Debug Tools -->
                                             <Grid Margin="0,16,0,0">
                                                 <Grid.ColumnDefinitions>
                                                     <ColumnDefinition Width="*"/>
                                                     <ColumnDefinition Width="*"/>
                                                     <ColumnDefinition Width="*"/>
                                                 </Grid.ColumnDefinitions>
                                                 
                                                 <Button Content="View Rank Fetch Log" 
                                                         Grid.Column="0"
                                                         Command="{Binding SettingsViewModel.ViewRankFetchLogCommand}"
                                                         Style="{StaticResource SettingsButtonStyle}" 
                                                         HorizontalAlignment="Stretch"/>
                                                 <Button Content="Clear Log" 
                                                         Grid.Column="1"
                                                         Command="{Binding SettingsViewModel.ClearRankFetchLogCommand}"
                                                         Style="{StaticResource SettingsButtonStyle}" 
                                                         HorizontalAlignment="Stretch"/>
                                                 <Button Content="View Config File" 
                                                         Grid.Column="2"
                                                         Command="{Binding SettingsViewModel.ViewConfigFileCommand}"
                                                         Style="{StaticResource SettingsButtonStyleLast}" 
                                                         HorizontalAlignment="Stretch"/>
                                             </Grid>
                                         </StackPanel>
                                     </Border>
                             </StackPanel>
                             </ScrollViewer>
                         </Grid>
                     </StackPanel>
                 </ScrollViewer>
                 
                 <!-- Status Bar -->
                 <Border Grid.Row="2" Style="{StaticResource CardStyle}" Margin="0,24,0,0">
                     <Grid>
                         <Grid.ColumnDefinitions>
                             <ColumnDefinition Width="*"/>
                             <ColumnDefinition Width="Auto"/>
                         </Grid.ColumnDefinitions>
                         
                        <!-- Status Info -->
                        <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="{Binding Status, StringFormat='Status: {0}'}" FontSize="12" 
                                     Foreground="{StaticResource TextSecondaryColor}" VerticalAlignment="Center"/>
                            <TextBlock Text=" | " FontSize="12" Foreground="{StaticResource TextSecondaryColor}" 
                                     VerticalAlignment="Center" Margin="8,0"/>
                            <TextBlock Text="{Binding AccountCount, StringFormat='Accounts: {0}'}" FontSize="12" 
                                     Foreground="{StaticResource TextSecondaryColor}" VerticalAlignment="Center"/>
                            <TextBlock Text=" | " FontSize="12" Foreground="{StaticResource TextSecondaryColor}" 
                                     VerticalAlignment="Center" Margin="8,0"/>
                            <TextBlock Text="{Binding LastUpdated, StringFormat='Last Updated: {0}'}" FontSize="12" 
                                     Foreground="{StaticResource TextSecondaryColor}" VerticalAlignment="Center"/>
                        </StackPanel>
                         
                        <!-- Status Actions -->
                        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                            <Button Content="Fetch All" 
                                    Command="{Binding LoginViewModel.FetchAllRanksCommand}"
                                    Style="{StaticResource SettingsPrimaryButtonStyle}" 
                                    Width="100" FontSize="13" 
                                    ToolTip="Fetch All Ranks"/>
                        </StackPanel>
                     </Grid>
                 </Border>
             </Grid>
        </Grid>
        
        <!-- Progress Overlay -->
        <Border x:Name="ProgressOverlay" Grid.RowSpan="2" Background="#80000000" Visibility="Collapsed">
            <Border Style="{StaticResource CardStyle}" Width="400" Height="200" VerticalAlignment="Center" HorizontalAlignment="Center">
                <StackPanel>
                    <TextBlock x:Name="txtProgressTitle" Text="Processing..." FontSize="18" FontWeight="Bold" 
                             Foreground="{StaticResource TextPrimaryColor}" TextAlignment="Center" Margin="0,0,0,16"/>
                                         <ProgressBar x:Name="ProgressBar" Height="8" Margin="0,0,0,16">
                         <ProgressBar.Style>
                             <Style TargetType="ProgressBar">
                                 <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
                                 <Setter Property="Foreground" Value="{StaticResource PrimaryGradient}"/>
                                 <Setter Property="BorderThickness" Value="0"/>
                                 <Setter Property="Template">
                                     <Setter.Value>
                                         <ControlTemplate TargetType="ProgressBar">
                                             <Border Background="{TemplateBinding Background}" CornerRadius="4">
                                                 <Border x:Name="PART_Track" Background="{TemplateBinding Foreground}" 
                                                         CornerRadius="4" HorizontalAlignment="Left">
                                                     <Border.Width>
                                                         <MultiBinding Converter="{StaticResource ProgressToWidthConverter}">
                                                             <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value"/>
                                                             <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Minimum"/>
                                                             <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Maximum"/>
                                                             <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualWidth"/>
                                                         </MultiBinding>
                                                     </Border.Width>
                                                 </Border>
                                             </Border>
                                         </ControlTemplate>
                                     </Setter.Value>
                                 </Setter>
                             </Style>
                         </ProgressBar.Style>
                     </ProgressBar>
                    <TextBlock x:Name="txtProgressStatus" Text="" FontSize="14" 
                             Foreground="{StaticResource TextSecondaryColor}" TextAlignment="Center"/>
                </StackPanel>
            </Border>
        </Border>
        <!-- Snackbar/Toast notification -->
        <Border x:Name="Snackbar" Background="#222" CornerRadius="8" Padding="16,8" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                Margin="0,0,32,32" Visibility="Collapsed" Effect="{StaticResource CardShadow}">
            <TextBlock x:Name="SnackbarText" Foreground="White" FontSize="13"/>
        </Border>
    </Grid>
</Window> 